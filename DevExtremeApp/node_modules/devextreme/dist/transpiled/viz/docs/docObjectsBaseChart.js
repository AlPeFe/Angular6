"use strict";

/**
* @name baseSeriesObject
* @publicName Series
* @type object
*/
var BaseBaseSeries = {
  /**
  * @name baseSeriesObjectFields.fullstate
  * @publicName fullState
  * @type number
  */
  fullState: 0,
  /**
  * @name baseSeriesObjectmethods.clearselection
  * @publicName clearSelection()
  */
  clearSelection: function clearSelection() {},
  /**
  * @name baseSeriesObjectmethods.deselectpoint
  * @publicName deselectPoint(point)
  * @param1 point:basePointObject
  */
  deselectPoint: function deselectPoint() {},
  /**
  * @name baseSeriesObjectmethods.getcolor
  * @publicName getColor()
  * @return string
  */
  getColor: function getColor() {},
  /**
  * @name baseSeriesObjectmethods.getallpoints
  * @publicName getAllPoints()
  * @return Array<basePointObject>
  */
  getAllPoints: function getAllPoints() {},
  /**
  * @name baseSeriesObjectmethods.getpointsbyarg
  * @publicName getPointsByArg(pointArg)
  * @param1 pointArg:number|string|date
  * @return Array<basePointObject>
  */
  getPointsByArg: function getPointsByArg() {},
  /**
  * @name baseSeriesObjectmethods.getpointbypos
  * @publicName getPointByPos(positionIndex)
  * @param1 positionIndex:number
  * @return basePointObject
  */
  getPointByPos: function getPointByPos() {},
  /**
  * @name baseSeriesObjectmethods.getvisiblepoints
  * @publicName getVisiblePoints()
  * @return Array<basePointObject>
  */
  getVisiblePoints: function getVisiblePoints() {},
  /**
  * @name baseSeriesObjectmethods.select
  * @publicName select()
  */
  select: function select() {},
  /**
  * @name baseSeriesObjectmethods.selectpoint
  * @publicName selectPoint(point)
  * @param1 point:basePointObject
  */
  selectPoint: function selectPoint() {},
  /**
  * @name baseSeriesObjectmethods.hover
  * @publicName hover()
  */
  hover: function hover() {},
  /**
  * @name baseSeriesObjectmethods.clearHover
  * @publicName clearHover()
  */
  clearHover: function clearHover() {},
  /**
  * @name baseSeriesObjectmethods.isSelected
  * @publicName isSelected()
  * @return boolean
  */
  isSelected: function isSelected() {},
  /**
  * @name baseSeriesObjectmethods.isHovered
  * @publicName isHovered()
  * @return boolean
  */
  isHovered: function isHovered() {},
  /**
  * @name baseSeriesObjectmethods.isvisible
  * @publicName isVisible()
  * @return boolean
  */
  isVisible: function isVisible() {},
  /**
  * @name baseSeriesObjectFields.type
  * @publicName type
  * @type string
  */
  type: null,
  /**
  * @name baseSeriesObjectFields.name
  * @publicName name
  * @type any
  */
  name: null,
  /**
  * @name baseSeriesObjectFields.tag
  * @publicName tag
  * @type any
  */
  tag: null,
  /**
  * @name baseSeriesObjectmethods.show
  * @publicName show()
  */
  show: function show() {},
  /**
  * @name baseSeriesObjectmethods.hide
  * @publicName hide()
  */
  hide: function hide() {}

  /**
  * @name basePointObject
  * @publicName Point
  * @type object
  */
};var BasePoint = {
  /**
  * @name basePointObjectFields.data
  * @publicName data
  * @type any
  */
  data: {},
  /**
  * @name basePointObjectFields.fullstate
  * @publicName fullState
  * @type number
  */
  fullState: 0,
  /**
  * @name basePointObjectmethods.clearselection
  * @publicName clearSelection()
  */
  clearSelection: function clearSelection() {},
  /**
  * @name basePointObjectFields.originalArgument
  * @publicName originalArgument
  * @type string|number|date
  */
  originalArgument: null,
  /**
  * @name basePointObjectFields.originalValue
  * @publicName originalValue
  * @type string|number|date
  */
  originalValue: null,
  /**
  * @name basePointObjectmethods.select
  * @publicName select()
  */
  select: function select() {},
  /**
  * @name basePointObjectmethods.hover
  * @publicName hover()
  */
  hover: function hover() {},
  /**
  * @name basePointObjectmethods.clearHover
  * @publicName clearHover()
  */
  clearHover: function clearHover() {},
  /**
  * @name basePointObjectmethods.isSelected
  * @publicName isSelected()
  * @return boolean
  */
  isSelected: function isSelected() {},
  /**
  * @name basePointObjectmethods.isHovered
  * @publicName isHovered()
  * @return boolean
  */
  isHovered: function isHovered() {},
  /**
  * @name basePointObjectmethods.showTooltip
  * @publicName showTooltip()
  */
  showTooltip: function showTooltip() {},
  /**
  * @name basePointObjectmethods.hideTooltip
  * @publicName hideTooltip()
  */
  hideTooltip: function hideTooltip() {},
  /**
  * @name basePointObjectmethods.getcolor
  * @publicName getColor()
  * @return string
  */
  getColor: function getColor() {},
  /**
  * @name basePointObjectFields.series
  * @publicName series
  * @type object
  */
  series: null,
  /**
  * @name basePointObjectFields.tag
  * @publicName tag
  * @type any
  */
  tag: null,
  /**
  * @name basePointObjectmethods.getlabel
  * @publicName getLabel()
  * @return baseLabelObject|Array<baseLabelObject>
  */
  getLabel: function getLabel() {}
};
/**
* @name baseLabelObject
* @publicName Label
* @type object
*/
var BaseLabel = {
  /**
  * @name baseLabelObjectmethods.getboundingrect
  * @publicName getBoundingRect()
  * @return object
  */
  getBoundingRect: function getBoundingRect() {},
  /**
  * @name baseLabelObjectmethods.hide
  * @publicName hide()
  */
  /**
  * @name baseLabelObjectmethods.hide
  * @publicName hide(holdInvisible)
  * @param1 holdInvisible:boolean
  */
  hide: function hide(holdInvisible) {},
  /**
  * @name baseLabelObjectmethods.show
  * @publicName show()
  */
  /**
  * @name baseLabelObjectmethods.show
  * @publicName show(holdVisible)
  * @param1 holdVisible:boolean
  */
  show: function show(holdVisible) {},
  /**
  * @name baseLabelObjectmethods.isvisible
  * @publicName isVisible()
  * @return boolean
  */
  isVisible: function isVisible() {}
};